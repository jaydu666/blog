{"meta":{"title":"JayDu Blog","subtitle":"","description":"","author":"JayDu","url":"http://www.jaydu.vip","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"un66fin66","updated":"un66fin66","comments":false,"path":"/404.html","permalink":"http://www.jaydu.vip/404.html","excerpt":"","text":""},{"title":"书单","date":"un66fin66","updated":"un66fin66","comments":false,"path":"books/index.html","permalink":"http://www.jaydu.vip/books/index.html","excerpt":"","text":""},{"title":"关于","date":"un66fin66","updated":"un66fin66","comments":false,"path":"about/index.html","permalink":"http://www.jaydu.vip/about/index.html","excerpt":"","text":""},{"title":"分类","date":"un66fin66","updated":"un66fin66","comments":false,"path":"categories/index.html","permalink":"http://www.jaydu.vip/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"un66fin66","updated":"un66fin66","comments":true,"path":"links/index.html","permalink":"http://www.jaydu.vip/links/index.html","excerpt":"","text":""},{"title":"标签","date":"un66fin66","updated":"un66fin66","comments":false,"path":"tags/index.html","permalink":"http://www.jaydu.vip/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"un66fin66","updated":"un66fin66","comments":false,"path":"repository/index.html","permalink":"http://www.jaydu.vip/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"第四章-数据编码与演化","slug":"reading_notes/Data_intensive_application_system_design/chapter4","date":"un66fin66","updated":"un66fin66","comments":true,"path":"2020/06/13/reading_notes/Data_intensive_application_system_design/chapter4/","link":"","permalink":"http://www.jaydu.vip/2020/06/13/reading_notes/Data_intensive_application_system_design/chapter4/","excerpt":"","text":"数据编码格式内存中，例如对象、结构体、数组、列表、哈希表和树持久化或者通讯数据，例如文件、通过网络发送数据 与语言相关的特定格式例如Java的java.Serializable编码通常与特定的编程语言绑定一起 JSON、XML与二进制变体 JSON、XML优点具有简单可读性, 便于两个组织之前通讯缺点占用空间大数字编码有很多模糊之处不支持二进制字符, 但可以把二进制转为Base64编码再保存 二进制编码优点格式紧凑、占用空间小、序列化反序列化更快, 用于组织内部使用","categories":[{"name":"《第四章-数据编码与演化》读书笔记","slug":"《第四章-数据编码与演化》读书笔记","permalink":"http://www.jaydu.vip/categories/%E3%80%8A%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81%E4%B8%8E%E6%BC%94%E5%8C%96%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://www.jaydu.vip/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"数据密集型应用系统设计","slug":"数据密集型应用系统设计","permalink":"http://www.jaydu.vip/tags/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"}]},{"title":"linux下perf性能优化","slug":"linux/perf","date":"un66fin66","updated":"un66fin66","comments":true,"path":"2020/06/13/linux/perf/","link":"","permalink":"http://www.jaydu.vip/2020/06/13/linux/perf/","excerpt":"","text":"工具准备安装dot: yum install graphviz -y (root权限)准备 gprof2dot.py : Gprof2dot主要用来生成调用图，可以直观的看到每个函数的cpu消耗。下载链接 使用ops添加sudo权限：12visudoCmnd_Alias OPSPWD = /usr/bin/dotOps用户运行perf：1234#生成perf数据sudo perf record -ag --call-graph dwarf -p pid -o perf.data sleep 10#perf数据转成调用图sudo perf script -i perf.data | python3 gprof2dot.py -f perf -e 1 | dot -Tpdf -o perf_data.pdf","categories":[{"name":"linux","slug":"linux","permalink":"http://www.jaydu.vip/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://www.jaydu.vip/tags/linux/"},{"name":"perf","slug":"perf","permalink":"http://www.jaydu.vip/tags/perf/"},{"name":"性能优化","slug":"性能优化","permalink":"http://www.jaydu.vip/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"}]},{"title":"分布式系统选主","slug":"distributed_systems/election","date":"un66fin66","updated":"un66fin66","comments":true,"path":"2020/06/13/distributed_systems/election/","link":"","permalink":"http://www.jaydu.vip/2020/06/13/distributed_systems/election/","excerpt":"","text":"Bully算法(长者为大)核心思想: 基于序号选举算法,长者为大Bully 算法在选举过程中，需要用到以下 3 种消息：Election 消息，用于发起选举；Alive 消息，对 Election 消息的应答；Victory 消息，竞选成功的主节点向其他节点发送的宣誓主权的消息。选举条件:初始化主节点宕机选举规则:Bully 算法选举的原则是“长者为大”，意味着它的假设条件是，集群中每个节点均知道其他节点的 ID。集群中每个节点判断自己的 ID 是否为当前活着的节点中 ID最大的，如果是，则直接向其他节点发送 Victory 消息，宣誓自己的主权；如果自己不是当前活着的节点中 ID 最大的，则向比自己 ID 大的所有节点发送 Election 消息，并等待其他节点的回复；若在给定的时间范围内，本节点没有收到其他节点回复的 Alive 消息，则认为自己成为主节点，并向其他节点发送 Victory 消息，宣誓自己成为主节点；若接收到来自比自己 ID 大的节点的 Alive 消息，则等待其他节点发送 Victory 消息；若本节点收到比自己 ID 小的节点发送的 Election 消息，则回复一个 Alive 消息，告知其他节点，我比你大。应用:MongoDB 的副本集故障转移功能。MongoDB 的分布式选举中，采用节点的最后操作时间戳来表示 ID，时间戳最新的节点其 ID 最大，也就是说时间戳最新的、活着的节点是主节点。 Raft 算法(民主投票)核心思想: 少数服从多数角色:Leader,即主节点,同一时刻只有一个 Leader,负责协调和管理其他节点。Candidate，即候选者，每一个节点都可以成为 Candidate,节点在该角色下才可以被选为新的 Leader。Follower,Leader 的跟随者，不可以发起选举。时间心跳间隔: 主节点隔多长时间发送心跳信息等待时间(election timeout): 如果超过这个时间仍然没有收到心跳,则认为主节点宕机。一般每个节点各自在 150～300ms 间随机取值。心跳间隔时间 &lt; 等待时间选举周期term:作用: 第几轮选举,逻辑上的&quot;时间&quot;,用于记录和比较各节点&quot;进度&quot;某个节点收到信息的term &gt; 自身term, 更新 自身term=收到更大的term, 进入Follower状态某个节点收到信息的term &lt;= 自身term, 忽略例如由于网络情况不佳，一个主节点 A 与其它节点失联，其它节点选了一个新的主节点 B，当网络恢复正常时，旧主节点 A 收到主节点 B 的消息时，它会判断新主节点 B 的 term 大于自己，说明自己错过了一些事件，因此选择放弃自己的主节点身份选举流程:初始化时,所有节点均为Follower节点Follower节点等待超时,转为Candidate(由于等待时间是随机取值,Follower同时超时小概率,但有可能同时多个Follower超时),并向其他节点发送选举请求,同时把自己那票投给自己。其他节点根据收到选举请求顺序,回复是否同意成为主。为了保证只能选出一个主,每一个节点只能投出一张票,而且票数超过一半才能成为主。若发起选举的请求节点获得超过一半的票数,才能成为主,转为leader,其他节点状态由Candidate转为Fallower。Leader节点与Fallower节点之间定期发送心跳包,检测主节点是否活着。相关资料:https://lotabout.me/2019/Raft-Consensus-Algorithm/ 相关文章http://thesecretlivesofdata.com/raft/#election 选举演示 Zab (Zookeeper Atomic Broadcat)选举参考物:epoch: 选举轮数server_id: 节点唯一IDserver_zxId: 存放数据ID(数据版本号, 每次commit都递增)选举规则:优先选出epoch大的, epoch相同再选server_zxId大的, server_zxId相同再选server_id大的","categories":[{"name":"分布式","slug":"分布式","permalink":"http://www.jaydu.vip/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"}],"tags":[{"name":"分布式","slug":"分布式","permalink":"http://www.jaydu.vip/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"},{"name":"选主","slug":"选主","permalink":"http://www.jaydu.vip/tags/%E9%80%89%E4%B8%BB/"}]}],"categories":[{"name":"《第四章-数据编码与演化》读书笔记","slug":"《第四章-数据编码与演化》读书笔记","permalink":"http://www.jaydu.vip/categories/%E3%80%8A%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%95%B0%E6%8D%AE%E7%BC%96%E7%A0%81%E4%B8%8E%E6%BC%94%E5%8C%96%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"linux","slug":"linux","permalink":"http://www.jaydu.vip/categories/linux/"},{"name":"分布式","slug":"分布式","permalink":"http://www.jaydu.vip/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"}],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://www.jaydu.vip/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"},{"name":"数据密集型应用系统设计","slug":"数据密集型应用系统设计","permalink":"http://www.jaydu.vip/tags/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"},{"name":"linux","slug":"linux","permalink":"http://www.jaydu.vip/tags/linux/"},{"name":"perf","slug":"perf","permalink":"http://www.jaydu.vip/tags/perf/"},{"name":"性能优化","slug":"性能优化","permalink":"http://www.jaydu.vip/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"},{"name":"分布式","slug":"分布式","permalink":"http://www.jaydu.vip/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"},{"name":"选主","slug":"选主","permalink":"http://www.jaydu.vip/tags/%E9%80%89%E4%B8%BB/"}]}